{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as RechartsPrimitive from \"recharts\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\n// Format: { THEME_NAME: CSS_SELECTOR }\r\nconst THEMES = { light: \"\", dark: \".dark\" } as const\r\n\r\nexport type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode\r\n    icon?: React.ComponentType\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  )\r\n}\r\n\r\ntype ChartContextProps = {\r\n  config: ChartConfig\r\n}\r\n\r\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\r\n\r\nfunction useChart() {\r\n  const context = React.useContext(ChartContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"]\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId()\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  )\r\n})\r\nChartContainer.displayName = \"Chart\"\r\n\r\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  )\r\n\r\n  if (!colorConfig.length) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color\r\n    return color ? `  --color-${key}: ${color};` : null\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst ChartTooltip = RechartsPrimitive.Tooltip\r\n\r\nconst ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n    React.ComponentProps<\"div\"> & {\r\n      hideLabel?: boolean\r\n      hideIndicator?: boolean\r\n      indicator?: \"line\" | \"dot\" | \"dashed\"\r\n      nameKey?: string\r\n      labelKey?: string\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null\r\n      }\r\n\r\n      const [item] = payload\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, payload)}\r\n          </div>\r\n        )\r\n      }\r\n\r\n      if (!value) {\r\n        return null\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ])\r\n\r\n    if (!active || !payload?.length) {\r\n      return null\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n            const indicatorColor = color || item.payload.fill || item.color\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartTooltipContent.displayName = \"ChartTooltip\"\r\n\r\nconst ChartLegend = RechartsPrimitive.Legend\r\n\r\nconst ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> &\r\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n      hideIcon?: boolean\r\n      nameKey?: string\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart()\r\n\r\n    if (!payload?.length) {\r\n      return null\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          )\r\n        })}\r\n      </div>\r\n    )\r\n  }\r\n)\r\nChartLegendContent.displayName = \"ChartLegend\"\r\n\r\n// Helper to extract item config from a payload.\r\nfunction getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined\r\n\r\n  let configLabelKey: string = key\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config]\r\n}\r\n\r\nexport {\r\n  ChartContainer,\r\n  ChartTooltip,\r\n  ChartTooltipContent,\r\n  ChartLegend,\r\n  ChartLegendContent,\r\n  ChartStyle,\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent }"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,sKAAA,CAAA,SAAuB;kBACtB,cAAA,6LAAC,sKAAA,CAAA,UAAwB;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/components/ui/calendar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\r\nimport { DayPicker } from \"react-day-picker\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\r\n\r\nfunction Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className, ...props }) => (\r\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n        IconRight: ({ className, ...props }) => (\r\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nCalendar.displayName = \"Calendar\"\r\n\r\nexport { Calendar }"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;AAPA;;;;;;AAWA,SAAS,SAAS,EAChB,SAAS,EACT,UAAU,EACV,kBAAkB,IAAI,EACtB,GAAG,OACW;IACd,qBACE,6LAAC,iKAAA,CAAA,YAAS;QACR,iBAAiB;QACjB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QACrB,YAAY;YACV,QAAQ;YACR,OAAO;YACP,SAAS;YACT,eAAe;YACf,KAAK;YACL,YAAY,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACX,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAU,IACpC;YAEF,qBAAqB;YACrB,iBAAiB;YACjB,OAAO;YACP,UAAU;YACV,WACE;YACF,KAAK;YACL,MAAM;YACN,KAAK,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACJ,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;gBAAE,SAAS;YAAQ,IAClC;YAEF,eAAe;YACf,cACE;YACF,WAAW;YACX,aACE;YACF,cAAc;YACd,kBACE;YACF,YAAY;YACZ,GAAG,UAAU;QACf;QACA,YAAY;YACV,UAAU,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBAChC,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;YAE7D,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,iBACjC,6LAAC,yNAAA,CAAA,eAAY;oBAAC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,WAAW;oBAAa,GAAG,KAAK;;;;;;QAEhE;QACC,GAAG,KAAK;;;;;;AAGf;KAvDS;AAwDT,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 646, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/lib/types.ts"],"sourcesContent":["export const VAT_RATE = 0.19; // 19% IVA\r\n\r\nexport interface IncomeRecord {\r\n  id: string;\r\n  date: Date;\r\n  source: string;\r\n  amount: number;       // Monto Total (CON IVA incluido, ingresado por el usuario)\r\n  netAmount: number;    // Monto Neto (calculado, SIN IVA)\r\n  ivaAmount: number;    // IVA (calculado)\r\n  description?: string;\r\n}\r\n\r\nexport interface ExpenseRecord {\r\n  id: string;\r\n  date: Date;\r\n  category: string; // e.g., operating costs, marketing\r\n  amount: number;\r\n  description?: string;\r\n}\r\n\r\nexport interface InventoryItem {\r\n  id: string;\r\n  name: string;\r\n  quantity: number;\r\n  purchasePrice: number; // Cost per unit\r\n  description?: string;\r\n  sku?: string; // Stock Keeping Unit\r\n  supplier?: string;\r\n  lastRestocked?: Date;\r\n}\r\n\r\n// For Custom Cost Analysis: Products are made from InventoryItems\r\nexport interface ProductComponent {\r\n  inventoryItemId: string | null; // If linked to inventory, this is the inventory item's ID. Null if manual.\r\n  itemName: string;       // Name of the component. (Read-only if linked, editable if manual)\r\n  quantity: number;\r\n  purchasePriceAtTimeOfAssembly: number; // Cost of one unit of this component. (Read-only if linked, editable if manual)\r\n}\r\n\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  description?: string;\r\n  components: ProductComponent[];\r\n  desiredProfitMargin: number; // User input, e.g., 30 for 30%\r\n\r\n  // Calculated fields\r\n  totalComponentCost?: number;\r\n  netSalePriceWithoutIVA?: number;\r\n  ivaAmountOnSale?: number;\r\n  finalSalePriceWithIVA?: number;\r\n}\r\n\r\n// Order Management Types\r\nexport interface OrderItem {\r\n  id: string; // Unique ID for the order item line\r\n  productName: string;\r\n  quantity: number;\r\n  unitPriceWithVat: number; // Price per unit WITH IVA (user input)\r\n  netUnitPrice: number;     // Calculated price per unit BEFORE IVA\r\n}\r\n\r\nexport type OrderStatus = 'Recibido' | 'Elaborado' | 'Completado' | 'Anulado';\r\n\r\nexport const ORDER_STATUSES: OrderStatus[] = ['Recibido', 'Elaborado', 'Completado', 'Anulado'];\r\n\r\nexport interface Order {\r\n  id: string;\r\n  orderDate: Date;\r\n  customerName?: string;\r\n  items: OrderItem[];\r\n  totalAmount: number;    // Calculated (sum of item.quantity * item.unitPriceWithVat) - effectively, this is the grand total with VAT\r\n  totalNetAmount: number; // Calculated sum of (item.quantity * item.netUnitPrice)\r\n  totalIvaAmount: number; // Calculated (totalAmount - totalNetAmount)\r\n  status: OrderStatus;\r\n  description?: string;\r\n}"],"names":[],"mappings":";;;;AAAO,MAAM,WAAW,MAAM,UAAU;AAgEjC,MAAM,iBAAgC;IAAC;IAAY;IAAa;IAAc;CAAU","debugId":null}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useMemo } from 'react';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent } from '@/components/ui/card';\nimport { BarChart as LucideBarChartIcon, DollarSign, Archive, TrendingUp, TrendingDown, Calendar as CalendarIcon, Percent } from 'lucide-react';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent } from '@/components/ui/chart';\nimport { Bar, XAxis, YAxis, CartesianGrid, ResponsiveContainer, BarChart as ShadBarChart } from 'recharts';\nimport { DateRange } from 'react-day-picker';\nimport { Popover, PopoverTrigger, PopoverContent } from '@/components/ui/popover';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from '@/components/ui/calendar';\nimport { format, startOfMonth, endOfMonth, addMonths } from 'date-fns';\nimport { es } from 'date-fns/locale';\nimport { VAT_RATE } from '@/lib/types';\nimport { formatCurrencyCLP } from '@/lib/utils';\n\nconst MOCK_CASH_FLOW_DATA_SOURCE = [\n  { monthLabel: 'Ene 2024', date: new Date(2024, 0, 15), income: 4000000, expenses: 2400000 },\n  { monthLabel: 'Feb 2024', date: new Date(2024, 1, 15), income: 3000000, expenses: 1398000 },\n  { monthLabel: 'Mar 2024', date: new Date(2024, 2, 15), income: 2000000, expenses: 5800000 },\n  { monthLabel: 'Abr 2024', date: new Date(2024, 3, 15), income: 2780000, expenses: 3908000 },\n  { monthLabel: 'May 2024', date: new Date(2024, 4, 15), income: 1890000, expenses: 4800000 },\n  { monthLabel: 'Jun 2024', date: new Date(2024, 5, 15), income: 2390000, expenses: 3800000 },\n  { monthLabel: 'Jul 2024', date: new Date(2024, 6, 15), income: 3200000, expenses: 2000000 },\n  { monthLabel: 'Ago 2024', date: new Date(2024, 7, 15), income: 4500000, expenses: 2800000 },\n];\n\nconst chartConfig = {\n  income: {\n    label: 'Ingresos',\n    color: 'hsl(var(--chart-1))',\n  },\n  expenses: {\n    label: 'Egresos',\n    color: 'hsl(var(--chart-2))',\n  },\n} satisfies import('@/components/ui/chart').ChartConfig;\n\n\nexport default function DashboardPage() {\n  const sixMonthsAgo = startOfMonth(addMonths(new Date(), -5));\n  const today = endOfMonth(new Date());\n  \n  // Estado para manejar las estadísticas de inventario\n  const [inventoryStats, setInventoryStats] = React.useState({\n    loading: true,\n    error: null as string | null,\n    totalItems: 0,\n    totalInventoryValue: 0,\n  });\n  \n  // Efecto para cargar las estadísticas de inventario\n  React.useEffect(() => {\n    const fetchInventoryStats = async () => {\n      try {\n        const response = await fetch('/api/dashboard/stats');\n        if (!response.ok) {\n          throw new Error('Error al cargar las estadísticas de inventario');\n        }\n        const data = await response.json();\n        setInventoryStats({\n          loading: false,\n          error: null,\n          totalItems: data.totalItems,\n          totalInventoryValue: data.totalInventoryValue,\n        });\n      } catch (error) {\n        console.error('Error fetching inventory stats:', error);\n        setInventoryStats({\n          loading: false,\n          error: 'Error al cargar los datos',\n          totalItems: 0,\n          totalInventoryValue: 0,\n        });\n      }\n    };\n\n    fetchInventoryStats();\n  }, []);\n\n  const [dateRange, setDateRange] = useState<DateRange | undefined>({\n    from: sixMonthsAgo,\n    to: today,\n  });\n\n  const MOCK_CASH_FLOW_DATA = useMemo(() => {\n    if (!dateRange?.from) return MOCK_CASH_FLOW_DATA_SOURCE;\n    const fromDate = dateRange.from;\n    const toDate = dateRange.to || new Date(8640000000000000); // Max date if 'to' is not set\n\n    return MOCK_CASH_FLOW_DATA_SOURCE.filter(item => {\n      const itemDate = item.date;\n      return itemDate >= fromDate && itemDate <= toDate;\n    });\n  }, [dateRange]);\n  \n  const totalIncome = MOCK_CASH_FLOW_DATA.reduce((sum, item) => sum + item.income, 0);\n  const totalExpenses = MOCK_CASH_FLOW_DATA.reduce((sum, item) => sum + item.expenses, 0);\n  const netProfit = totalIncome - totalExpenses;\n\n  const totalIvaFromIncome = useMemo(() => {\n    return MOCK_CASH_FLOW_DATA.reduce((sum, item) => {\n      const net = Math.round(item.income / (1 + VAT_RATE));\n      const iva = item.income - net;\n      return sum + iva;\n    }, 0);\n  }, [MOCK_CASH_FLOW_DATA]);\n  \n  // These are placeholders and would need real data sources for date filtering\n  const averageProfitMargin = MOCK_CASH_FLOW_DATA.length > 0 ? 25 : 0; // Simplified placeholder\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n        <h1 className=\"text-3xl font-headline font-semibold\">Dashboard</h1>\n        <Popover>\n          <PopoverTrigger asChild>\n            <Button\n              id=\"date\"\n              variant={\"outline\"}\n              className=\"w-full sm:w-[300px] justify-start text-left font-normal\"\n            >\n              <CalendarIcon className=\"mr-2 h-4 w-4\" />\n              {dateRange?.from ? (\n                dateRange.to ? (\n                  <>\n                    {format(dateRange.from, \"LLL dd, y\", {locale: es})} -{\" \"}\n                    {format(dateRange.to, \"LLL dd, y\", {locale: es})}\n                  </>\n                ) : (\n                  format(dateRange.from, \"LLL dd, y\", {locale: es})\n                )\n              ) : (\n                <span>Selecciona un rango</span>\n              )}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent className=\"w-auto p-0\" align=\"end\">\n            <Calendar\n              initialFocus\n              mode=\"range\"\n              defaultMonth={dateRange?.from}\n              selected={dateRange}\n              onSelect={setDateRange}\n              numberOfMonths={2}\n              locale={es}\n            />\n          </PopoverContent>\n        </Popover>\n      </div>\n      \n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-3\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Ingresos Totales (c/IVA)</CardTitle>\n            <TrendingUp className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrencyCLP(totalIncome)}</div>\n            <p className=\"text-xs text-muted-foreground\">\n              {dateRange?.from && dateRange?.to ? \n               `Del ${format(dateRange.from, \"P\", {locale:es})} al ${format(dateRange.to, \"P\", {locale:es})}` \n               : \"Período seleccionado\"}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Egresos Totales</CardTitle>\n            <TrendingDown className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrencyCLP(totalExpenses)}</div>\n             <p className=\"text-xs text-muted-foreground\">\n              {dateRange?.from && dateRange?.to ? \n               `Del ${format(dateRange.from, \"P\", {locale:es})} al ${format(dateRange.to, \"P\", {locale:es})}` \n               : \"Período seleccionado\"}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Beneficio Neto</CardTitle>\n            <DollarSign className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrencyCLP(netProfit)}</div>\n            <p className=\"text-xs text-muted-foreground\">Resultado de ingresos - egresos</p>\n          </CardContent>\n        </Card>\n         <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total IVA (Ingresos)</CardTitle>\n            <Percent className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{formatCurrencyCLP(totalIvaFromIncome)}</div>\n             <p className=\"text-xs text-muted-foreground\">\n              {dateRange?.from && dateRange?.to ? \n               `Del ${format(dateRange.from, \"P\", {locale:es})} al ${format(dateRange.to, \"P\", {locale:es})}` \n               : \"Período seleccionado\"}\n            </p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Margen de Ganancia Prom.</CardTitle>\n            <LucideBarChartIcon className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">{averageProfitMargin}%</div>\n            <p className=\"text-xs text-muted-foreground\">Promedio (placeholder)</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Artículos en Inventario</CardTitle>\n            <Archive className=\"h-5 w-5 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {inventoryStats.loading ? (\n              <div className=\"h-8 flex items-center\">\n                <div className=\"animate-pulse h-4 w-24 bg-muted rounded\"></div>\n              </div>\n            ) : inventoryStats.error ? (\n              <p className=\"text-sm text-destructive\">{inventoryStats.error}</p>\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\">{inventoryStats.totalItems}</div>\n                <p className=\"text-xs text-muted-foreground\">Unidades totales en inventario</p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n        <Card className=\"lg:col-start-3\">\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Valor del Inventario</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {inventoryStats.loading ? (\n              <div className=\"h-8 flex items-center\">\n                <div className=\"animate-pulse h-4 w-24 bg-muted rounded\"></div>\n              </div>\n            ) : inventoryStats.error ? (\n              <p className=\"text-sm text-destructive\">{inventoryStats.error}</p>\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\">{formatCurrencyCLP(inventoryStats.totalInventoryValue)}</div>\n                <p className=\"text-xs text-muted-foreground\">Valor total estimado</p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card className=\"col-span-1 lg:col-span-2\">\n        <CardHeader>\n          <CardTitle>Flujo de Caja</CardTitle>\n          <CardDescription>\n            Comparativa de ingresos y egresos mensuales.\n             {dateRange?.from && dateRange?.to ? \n               ` (${format(dateRange.from, \"MMM yyyy\", {locale:es})} - ${format(dateRange.to, \"MMM yyyy\", {locale:es})})` \n               : \"\"}\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"h-[350px] w-full\">\n          {MOCK_CASH_FLOW_DATA.length > 0 ? (\n            <ChartContainer config={chartConfig} className=\"h-full w-full\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <ShadBarChart data={MOCK_CASH_FLOW_DATA.map(d => ({...d, month: format(d.date, \"MMM yy\", {locale: es})}))} margin={{ top: 5, right: 20, left: -10, bottom: 5 }}>\n                  <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\n                  <XAxis dataKey=\"month\" tickLine={false} axisLine={false} tickMargin={8} />\n                  <YAxis tickLine={false} axisLine={false} tickMargin={8} tickFormatter={(value) => formatCurrencyCLP(value).replace('CLP ','')} />\n                  <ChartTooltip \n                    cursor={false}\n                    content={<ChartTooltipContent indicator=\"dot\" formatter={(value, name) => `${formatCurrencyCLP(Number(value))}`} />} \n                  />\n                  <Bar dataKey=\"income\" fill=\"var(--color-income)\" radius={[4, 4, 0, 0]} name=\"Ingresos\"/>\n                  <Bar dataKey=\"expenses\" fill=\"var(--color-expenses)\" radius={[4, 4, 0, 0]} name=\"Egresos\"/>\n                </ShadBarChart>\n              </ResponsiveContainer>\n            </ChartContainer>\n          ) : (\n            <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n              No hay datos para el rango de fechas seleccionado.\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}