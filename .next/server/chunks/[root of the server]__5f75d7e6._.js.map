{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/lib/db.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\n// Evita múltiples instancias de Prisma en desarrollo\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\n\nexport const prisma =\n  globalForPrisma.prisma ||\n  new PrismaClient({\n    log: ['query'],\n  });\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma;\n\nexport default prisma;\n"],"names":[],"mappings":";;;;AAAA;;AAEA,qDAAqD;AACrD,MAAM,kBAAkB;AAEjB,MAAM,SACX,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACf,KAAK;QAAC;KAAQ;AAChB;AAEF,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/app/api/inventory/%5Bid%5D/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { prisma } from '@/lib/db';\n\ninterface InventoryItem {\n  id: string;\n  name: string;\n  quantity: number;\n  purchasePrice: number;\n  description: string | null;\n  sku: string | null;\n  supplier: string | null;\n  lastRestocked: Date | null;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport async function PUT(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const id = params.id;\n    const data = await request.json();\n    \n    const updatedItem = await prisma.inventoryItem.update({\n      where: { id },\n      data: {\n        ...data,\n        quantity: data.quantity !== undefined ? Number(data.quantity) : undefined,\n        purchasePrice: data.purchasePrice !== undefined ? Number(data.purchasePrice) : undefined,\n        lastRestocked: data.lastRestocked ? new Date(data.lastRestocked) : null,\n      },\n    });\n    \n    return NextResponse.json({\n      ...updatedItem,\n      id: String(updatedItem.id)\n    } as InventoryItem);\n  } catch (error) {\n    console.error('Error updating inventory item:', error);\n    return NextResponse.json(\n      { error: 'Error al actualizar el ítem' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(\n  request: Request,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const id = params.id;\n    \n    await prisma.inventoryItem.delete({\n      where: { id },\n    });\n    \n    return new NextResponse(null, { status: 204 });\n  } catch (error) {\n    console.error('Error deleting inventory item:', error);\n    return NextResponse.json(\n      { error: 'Error al eliminar el ítem' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAeO,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,KAAK,OAAO,EAAE;QACpB,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,cAAc,MAAM,kHAAA,CAAA,SAAM,CAAC,aAAa,CAAC,MAAM,CAAC;YACpD,OAAO;gBAAE;YAAG;YACZ,MAAM;gBACJ,GAAG,IAAI;gBACP,UAAU,KAAK,QAAQ,KAAK,YAAY,OAAO,KAAK,QAAQ,IAAI;gBAChE,eAAe,KAAK,aAAa,KAAK,YAAY,OAAO,KAAK,aAAa,IAAI;gBAC/E,eAAe,KAAK,aAAa,GAAG,IAAI,KAAK,KAAK,aAAa,IAAI;YACrE;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,GAAG,WAAW;YACd,IAAI,OAAO,YAAY,EAAE;QAC3B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,KAAK,OAAO,EAAE;QAEpB,MAAM,kHAAA,CAAA,SAAM,CAAC,aAAa,CAAC,MAAM,CAAC;YAChC,OAAO;gBAAE;YAAG;QACd;QAEA,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC9C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,kCAAkC;QAChD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA4B,GACrC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}