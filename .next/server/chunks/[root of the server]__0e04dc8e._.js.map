{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/lib/sellable-products.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\nexport interface ProductComponent {\n  id?: string;\n  itemName: string;\n  quantity: number;\n  purchasePriceAtTimeOfAssembly: number;\n  inventoryItemId?: string | null;\n}\n\nexport interface SellableProduct {\n  id: string;\n  name: string;\n  description?: string | null;\n  components: ProductComponent[];\n  desiredProfitMargin: number;\n  totalComponentCost: number;\n  netSalePriceWithoutIVA: number;\n  ivaAmountOnSale: number;\n  finalSalePriceWithIVA: number;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport async function getSellableProducts(): Promise<SellableProduct[]> {\n  try {\n    const products = await prisma.sellableProduct.findMany({\n      include: {\n        components: true,\n      },\n      orderBy: { name: 'asc' },\n    });\n    \n    return products as unknown as SellableProduct[];\n  } catch (error) {\n    console.error('Error fetching sellable products:', error);\n    throw error;\n  }\n}\n\nexport async function createSellableProduct(productData: Omit<SellableProduct, 'id' | 'createdAt' | 'updatedAt'>): Promise<SellableProduct> {\n  try {\n    const product = await prisma.sellableProduct.create({\n      data: {\n        name: productData.name,\n        description: productData.description || null,\n        desiredProfitMargin: productData.desiredProfitMargin,\n        totalComponentCost: productData.totalComponentCost,\n        netSalePriceWithoutIVA: productData.netSalePriceWithoutIVA,\n        ivaAmountOnSale: productData.ivaAmountOnSale,\n        finalSalePriceWithIVA: productData.finalSalePriceWithIVA,\n        components: {\n          create: productData.components.map(comp => ({\n            itemName: comp.itemName,\n            quantity: comp.quantity,\n            purchasePriceAtTimeOfAssembly: comp.purchasePriceAtTimeOfAssembly,\n            inventoryItemId: comp.inventoryItemId || null,\n          })),\n        },\n      },\n      include: {\n        components: true,\n      },\n    });\n    \n    return product as unknown as SellableProduct;\n  } catch (error) {\n    console.error('Error creating sellable product:', error);\n    throw error;\n  }\n}\n\nexport async function updateSellableProduct(id: string, productData: Partial<SellableProduct>): Promise<SellableProduct> {\n  try {\n    // Primero actualizamos el producto\n    const updatedProduct = await prisma.sellableProduct.update({\n      where: { id },\n      data: {\n        name: productData.name,\n        description: productData.description || null,\n        desiredProfitMargin: productData.desiredProfitMargin,\n        totalComponentCost: productData.totalComponentCost,\n        netSalePriceWithoutIVA: productData.netSalePriceWithoutIVA,\n        ivaAmountOnSale: productData.ivaAmountOnSale,\n        finalSalePriceWithIVA: productData.finalSalePriceWithIVA,\n      },\n      include: {\n        components: true,\n      },\n    });\n\n    // Luego actualizamos los componentes\n    if (productData.components) {\n      // Eliminar componentes existentes\n      await prisma.productComponent.deleteMany({\n        where: { productId: id },\n      });\n\n      // Crear nuevos componentes\n      await prisma.productComponent.createMany({\n        data: productData.components.map(comp => ({\n          productId: id,\n          itemName: comp.itemName,\n          quantity: comp.quantity,\n          purchasePriceAtTimeOfAssembly: comp.purchasePriceAtTimeOfAssembly,\n          inventoryItemId: comp.inventoryItemId || null,\n        })),\n      });\n\n      // Obtener el producto con los componentes actualizados\n      const productWithComponents = await prisma.sellableProduct.findUnique({\n        where: { id },\n        include: { components: true },\n      });\n\n      return productWithComponents as unknown as SellableProduct;\n    }\n\n    return updatedProduct as unknown as SellableProduct;\n  } catch (error) {\n    console.error('Error updating sellable product:', error);\n    throw error;\n  }\n}\n\nexport async function deleteSellableProduct(id: string): Promise<void> {\n  try {\n    // Primero eliminamos los componentes asociados\n    await prisma.productComponent.deleteMany({\n      where: { productId: id },\n    });\n    \n    // Luego eliminamos el producto\n    await prisma.sellableProduct.delete({\n      where: { id },\n    });\n  } catch (error) {\n    console.error('Error deleting sellable product:', error);\n    throw error;\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAwBxB,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,OAAO,eAAe,CAAC,QAAQ,CAAC;YACrD,SAAS;gBACP,YAAY;YACd;YACA,SAAS;gBAAE,MAAM;YAAM;QACzB;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,MAAM;IACR;AACF;AAEO,eAAe,sBAAsB,WAAoE;IAC9G,IAAI;QACF,MAAM,UAAU,MAAM,OAAO,eAAe,CAAC,MAAM,CAAC;YAClD,MAAM;gBACJ,MAAM,YAAY,IAAI;gBACtB,aAAa,YAAY,WAAW,IAAI;gBACxC,qBAAqB,YAAY,mBAAmB;gBACpD,oBAAoB,YAAY,kBAAkB;gBAClD,wBAAwB,YAAY,sBAAsB;gBAC1D,iBAAiB,YAAY,eAAe;gBAC5C,uBAAuB,YAAY,qBAAqB;gBACxD,YAAY;oBACV,QAAQ,YAAY,UAAU,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;4BAC1C,UAAU,KAAK,QAAQ;4BACvB,UAAU,KAAK,QAAQ;4BACvB,+BAA+B,KAAK,6BAA6B;4BACjE,iBAAiB,KAAK,eAAe,IAAI;wBAC3C,CAAC;gBACH;YACF;YACA,SAAS;gBACP,YAAY;YACd;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAEO,eAAe,sBAAsB,EAAU,EAAE,WAAqC;IAC3F,IAAI;QACF,mCAAmC;QACnC,MAAM,iBAAiB,MAAM,OAAO,eAAe,CAAC,MAAM,CAAC;YACzD,OAAO;gBAAE;YAAG;YACZ,MAAM;gBACJ,MAAM,YAAY,IAAI;gBACtB,aAAa,YAAY,WAAW,IAAI;gBACxC,qBAAqB,YAAY,mBAAmB;gBACpD,oBAAoB,YAAY,kBAAkB;gBAClD,wBAAwB,YAAY,sBAAsB;gBAC1D,iBAAiB,YAAY,eAAe;gBAC5C,uBAAuB,YAAY,qBAAqB;YAC1D;YACA,SAAS;gBACP,YAAY;YACd;QACF;QAEA,qCAAqC;QACrC,IAAI,YAAY,UAAU,EAAE;YAC1B,kCAAkC;YAClC,MAAM,OAAO,gBAAgB,CAAC,UAAU,CAAC;gBACvC,OAAO;oBAAE,WAAW;gBAAG;YACzB;YAEA,2BAA2B;YAC3B,MAAM,OAAO,gBAAgB,CAAC,UAAU,CAAC;gBACvC,MAAM,YAAY,UAAU,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;wBACxC,WAAW;wBACX,UAAU,KAAK,QAAQ;wBACvB,UAAU,KAAK,QAAQ;wBACvB,+BAA+B,KAAK,6BAA6B;wBACjE,iBAAiB,KAAK,eAAe,IAAI;oBAC3C,CAAC;YACH;YAEA,uDAAuD;YACvD,MAAM,wBAAwB,MAAM,OAAO,eAAe,CAAC,UAAU,CAAC;gBACpE,OAAO;oBAAE;gBAAG;gBACZ,SAAS;oBAAE,YAAY;gBAAK;YAC9B;YAEA,OAAO;QACT;QAEA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF;AAEO,eAAe,sBAAsB,EAAU;IACpD,IAAI;QACF,+CAA+C;QAC/C,MAAM,OAAO,gBAAgB,CAAC,UAAU,CAAC;YACvC,OAAO;gBAAE,WAAW;YAAG;QACzB;QAEA,+BAA+B;QAC/B,MAAM,OAAO,eAAe,CAAC,MAAM,CAAC;YAClC,OAAO;gBAAE;YAAG;QACd;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/app/api/sellable-products/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { \n  getSellableProducts, \n  createSellableProduct, \n  updateSellableProduct, \n  deleteSellableProduct,\n  SellableProduct\n} from '@/lib/sellable-products';\n\nexport async function GET() {\n  try {\n    const products = await getSellableProducts();\n    return NextResponse.json(products);\n  } catch (error) {\n    console.error('Error fetching sellable products:', error);\n    return NextResponse.json(\n      { error: 'Error al obtener los productos' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    const productData = await request.json();\n    const newProduct = await createSellableProduct({\n      ...productData,\n      components: productData.components || []\n    });\n    return NextResponse.json(newProduct, { status: 201 });\n  } catch (error) {\n    console.error('Error creating product:', error);\n    return NextResponse.json(\n      { error: 'Error al crear el producto' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PUT(request: Request) {\n  try {\n    const { id, ...productData } = await request.json();\n    if (!id) {\n      return NextResponse.json(\n        { error: 'Se requiere el ID del producto' },\n        { status: 400 }\n      );\n    }\n    \n    const updatedProduct = await updateSellableProduct(id, productData);\n    return NextResponse.json(updatedProduct);\n  } catch (error) {\n    console.error('Error updating product:', error);\n    return NextResponse.json(\n      { error: 'Error al actualizar el producto' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function DELETE(request: Request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const id = searchParams.get('id');\n    \n    if (!id) {\n      return NextResponse.json(\n        { error: 'Se requiere el ID del producto' },\n        { status: 400 }\n      );\n    }\n    \n    await deleteSellableProduct(id);\n    return NextResponse.json({ success: true });\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    return NextResponse.json(\n      { error: 'Error al eliminar el producto' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAQO,eAAe;IACpB,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,oIAAA,CAAA,sBAAmB,AAAD;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,qCAAqC;QACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAiC,GAC1C;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,cAAc,MAAM,QAAQ,IAAI;QACtC,MAAM,aAAa,MAAM,CAAA,GAAA,oIAAA,CAAA,wBAAqB,AAAD,EAAE;YAC7C,GAAG,WAAW;YACd,YAAY,YAAY,UAAU,IAAI,EAAE;QAC1C;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY;YAAE,QAAQ;QAAI;IACrD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA6B,GACtC;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,IAAI,OAAgB;IACxC,IAAI;QACF,MAAM,EAAE,EAAE,EAAE,GAAG,aAAa,GAAG,MAAM,QAAQ,IAAI;QACjD,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiC,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,iBAAiB,MAAM,CAAA,GAAA,oIAAA,CAAA,wBAAqB,AAAD,EAAE,IAAI;QACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAkC,GAC3C;YAAE,QAAQ;QAAI;IAElB;AACF;AAEO,eAAe,OAAO,OAAgB;IAC3C,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,KAAK,aAAa,GAAG,CAAC;QAE5B,IAAI,CAAC,IAAI;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAiC,GAC1C;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,CAAA,GAAA,oIAAA,CAAA,wBAAqB,AAAD,EAAE;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAgC,GACzC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}