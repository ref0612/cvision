{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ferna/Desktop/cvision/src/app/api/dashboard/stats/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { PrismaClient } from '@prisma/client';\n\nconst prisma = new PrismaClient();\n\ninterface InventoryStats {\n  totalItems: number;\n  totalInventoryValue: number;\n}\n\nexport async function GET() {\n  try {\n    // Obtener el conteo total de ítems de inventario usando SQL directo\n    const countResult = await prisma.$queryRaw<Array<{ count: number }>>`\n      SELECT COUNT(*) as count FROM \"inventory_items\"\n    `;\n    \n    const totalItems = countResult[0]?.count || 0;\n    \n    // Usar SQL raw para calcular correctamente el valor total del inventario\n    const valueResult = await prisma.$queryRaw<Array<{ totalValue: number }>>`\n      SELECT COALESCE(SUM(\"purchasePrice\" * \"quantity\"), 0) as \"totalValue\" \n      FROM \"inventory_items\"\n    `;\n    \n    const totalInventoryValue = valueResult[0]?.totalValue || 0;\n\n    return NextResponse.json<InventoryStats>({\n      totalItems: Number(totalItems),\n      totalInventoryValue: Number(totalInventoryValue),\n    });\n  } catch (error) {\n    console.error('Error fetching dashboard stats:', error);\n    return NextResponse.json(\n      { error: 'Error al obtener las estadísticas del dashboard' },\n      { status: 500 }\n    );\n  } finally {\n    await prisma.$disconnect();\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY;AAOxB,eAAe;IACpB,IAAI;QACF,oEAAoE;QACpE,MAAM,cAAc,MAAM,OAAO,SAAS,AAA0B,CAAC;;IAErE,CAAC;QAED,MAAM,aAAa,WAAW,CAAC,EAAE,EAAE,SAAS;QAE5C,yEAAyE;QACzE,MAAM,cAAc,MAAM,OAAO,SAAS,AAA+B,CAAC;;;IAG1E,CAAC;QAED,MAAM,sBAAsB,WAAW,CAAC,EAAE,EAAE,cAAc;QAE1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAiB;YACvC,YAAY,OAAO;YACnB,qBAAqB,OAAO;QAC9B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAkD,GAC3D;YAAE,QAAQ;QAAI;IAElB,SAAU;QACR,MAAM,OAAO,WAAW;IAC1B;AACF","debugId":null}}]
}